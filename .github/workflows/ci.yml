name: Django CI # workflow 이름

on: # Event
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs: # Job
  ci: # Job 이름
    runs-on: ubuntu-latest # Runner

    services: # 컨테이너, docker-compose 설정과 거의 유사
      db:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.TEST_DATABASE_PASSWORD }} # github에 등록한 환경변수
          MYSQL_DATABASE: ${{ secrets.TEST_DATABASE_NAME }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps: # Step
    # 레포지토리의 소스 코드를 체크아웃하여 작업 디렉토리로 가져오는 action
    - name: Checkout
      uses: actions/checkout@v2 

    # mysql 컨테이너 연결 확인
    - name: Verify MySQL connection
      run: |
        mysql --version
        mysql --host 127.0.0.1 --port 3306 -u ${{ secrets.TEST_DATABASE_USER }} -p${{ secrets.TEST_DATABASE_PASSWORD }}

    # 파이썬 3.11.0 버전 설치
    - name: Set up Python 3.11.0 
      uses: actions/setup-python@v2
      with:
        python-version: 3.11.0 

    # .env 생성
    - name: Setting .env
      run: |
          echo "${{ secrets.ENV }}" >> .env
          cat .env

    # 의존성 설치
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # mysql 컨테이너에 migration, 테이블 생성
    - name: Run migrations
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        TEST_DATABASE_NAME: ${{ secrets.TEST_DATABASE_NAME }}
        TEST_DATABASE_USER: ${{ secrets.TEST_DATABASE_USER }}
        TEST_DATABASE_PASSWORD: ${{ secrets.TEST_DATABASE_PASSWORD }}
        TEST_DATABASE_HOST: ${{ secrets.TEST_DATABASE_HOST }}
        TEST_DATABASE_PORT: ${{ secrets.TEST_DATABASE_PORT }}
        
      run: |
        python manage.py makemigrations
        python manage.py migrate

    # 테스트 진행
    - name: Run Tests
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        TEST_DATABASE_NAME: ${{ secrets.TEST_DATABASE_NAME }}
        TEST_DATABASE_USER: ${{ secrets.TEST_DATABASE_USER }}
        TEST_DATABASE_PASSWORD: ${{ secrets.TEST_DATABASE_PASSWORD }}
        TEST_DATABASE_HOST: ${{ secrets.TEST_DATABASE_HOST }}
        TEST_DATABASE_PORT: ${{ secrets.TEST_DATABASE_PORT }}
      run: |
        mysql --host 127.0.0.1 --port 3306 -u ${{ secrets.TEST_DATABASE_USER }} -p${{ secrets.TEST_DATABASE_PASSWORD }}
        python manage.py test
